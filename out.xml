 <nil:description
    xmlns="http://cpee.org/ns/description/1.0"
    xmlns:nil="http://cpee.org/ns/description/1.0/nil"
    xmlns:ins="http://cpee.org/ns/description/1.0/insert"
    xmlns:del="http://cpee.org/ns/description/1.0/delete"
    xmlns:movfr="http://cpee.org/ns/description/1.0/move-from"
    xmlns:movto="http://cpee.org/ns/description/1.0/move-to"
    xmlns:upd="http://cpee.org/ns/description/1.0/update">
    <del:stop/>
    <movfr:call endpoint="bookAir">
        <nil:parameters>
            <nil:label>Book Airline</nil:label>
            <nil:method>:post</nil:method>
            <nil:arguments>
                <del:nested>
                    <del:deep>45</del:deep>
                </del:nested>
                <nil:from>data.from</nil:from>
                <nil:to>data.to</nil:to>
                <nil:persons>data.persons</nil:persons>
            </nil:arguments>
        </nil:parameters>
        <nil:code>
            <nil:finalize output="result">data.airline = result.value('id'); data.costs += result.value('costs').to_f;</nil:finalize>
            <ins:update output="result"/>
            <ins:rescue output="result"/>
        </nil:code>
    </movfr:call>
    <nil:parallel>
        <nil:loop mode="pre_test" condition="data.persons > 0">
            <nil:parallel_branch pass="data.persons" local="p">
                <nil:call endpoint="bookHotel">
                    <nil:parameters>
                        <nil:label>Book Hotel</nil:label>
                        <nil:method>:post</nil:method>
                        <nil:arguments>
                            <nil:to>data.to</nil:to>
                        </nil:arguments>
                    </nil:parameters>
                    <nil:code>
                        <nil:finalize output="result">data.hotels result.value('id') data.costs += result.value('costs').to_f</nil:finalize>
                    </nil:code>
                </nil:call>
                <movto:call endpoint="bookAir">
                    <nil:parameters>
                        <nil:label>Book Airline</nil:label>
                        <nil:method>:post</nil:method>
                        <nil:arguments>
                            <nil:from>data.from</nil:from>
                            <nil:to>data.to</nil:to>
                            <nil:persons>data.persons</nil:persons>
                        </nil:arguments>
                    </nil:parameters>
                    <nil:code>
                        <nil:finalize output="result">data.airline = result.value('id'); data.costs += result.value('costs').to_f;</nil:finalize>
                        <ins:update output="result"/>
                        <ins:rescue output="result"/>
                    </nil:code>
                </movto:call>
            </nil:parallel_branch>
            <nil:manipulate>data.persons -= 1</nil:manipulate>
        </nil:loop>
    </nil:parallel>
    <nil:choose mode="inclusive">
        <ins:otherwise>
            <ins:call endpoint="reject">
                <ins:parameters>
                    <ins:label>Reject hotel</ins:label>
                    <ins:method>:post</ins:method>
                    <ins:arguments>
                        <ins:costs>0</ins:costs>
                    </ins:arguments>
                </ins:parameters>
            </ins:call>
            <ins:_probability>
                <ins:_probability_min>0.1</ins:_probability_min>
                <ins:_probability_max>90</ins:_probability_max>
                <ins:_probability_avg>123</ins:_probability_avg>
            </ins:_probability>
        </ins:otherwise>
        <movto:escape/>
        <movfr:alternative condition="data.costs > 700">
            <nil:call endpoint="approve">
                <nil:parameters>
                    <nil:label>Approve Hotel</nil:label>
                    <nil:method>:post</nil:method>
                    <nil:arguments>
                        <nil:costs>data.costs</nil:costs>
                    </nil:arguments>
                </nil:parameters>
            </nil:call>
            <movfr:escape/>
        </movfr:alternative>
    </nil:choose>
    <movto:alternative condition="data.costs > 700">
        <nil:call endpoint="approve">
            <nil:parameters>
                <nil:label>Approve Hotel</nil:label>
                <nil:method>:post</nil:method>
                <nil:arguments>
                    <nil:costs>data.costs</nil:costs>
                </nil:arguments>
            </nil:parameters>
        </nil:call>
    </movto:alternative>
    <ins:terminate/>
</nil:description>
